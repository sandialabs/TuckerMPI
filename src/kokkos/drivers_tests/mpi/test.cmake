include(FindUnixCommands)

# run script taking txt file and dumping binary file
set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/ascii_to_binary.py -i ${TENSORASCIIDATAFILE} -o ${TENSORBINDATAFILE} --skip ${SKIPROWS}")
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "binary convertion failed")
else()
  message("ascii-to-bin succeeded!")
endif()

file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/compressed)

set(CMD "${MPIEXEC} -n ${NUMPROC} ${EXENAME}")
message(STATUS ${CMD})
execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
if(RES)
  message(FATAL_ERROR "run failed")
else()
  message("run succeeded!")
endif()

if(DEFINED EIGVAL)
  if (${EIGVAL} EQUAL 1)
    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/compare_eigenvalues.py --rtol ${EIGVAL_COMPARISON_RELTOL} --atol ${EIGVAL_COMPARISON_ABSTOL}")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "eigval comparison failed")
    else()
      message("eigval comparison succeeded!")
    endif()
  endif()
endif()


if(DEFINED STATS)
  if (${STATS} EQUAL 1)
    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/compare_stats.py --rtol ${STATS_COMPARISON_RELTOL} --atol ${STATS_COMPARISON_ABSTOL}")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "stats comparison failed")
    else()
      message("stats comparison succeeded!")
    endif()
  endif()
endif()


if(DEFINED NORMALIZEDTENSOR)
  if (${NORMALIZEDTENSOR} EQUAL 1)
    # conver from txt to binary
    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/ascii_to_binary.py -i ${GOLDNORMALIZEDTENSORASCIIDATAFILE} -o ${GOLDNORMALIZEDTENSORBINDATAFILE} --skip 0")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "preproc binary convertion failed")
    else()
      message("preproc ascii-to-bin succeeded!")
    endif()

    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/compare_preproc_tensor.py --rtol ${PREPROC_COMPARISON_RELTOL} --atol ${PREPROC_COMPARISON_ABSTOL}")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "normalized tensor comparison failed")
    else()
      message("normalized tensor comparison succeeded!")
    endif()
  endif()
endif()

if(DEFINED CORETENSOR)
  if (${CORETENSOR} EQUAL 1)
    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/compare_core_tensor.py --rtol ${CORETENSOR_COMPARISON_RELTOL} --atol ${CORETENSOR_COMPARISON_ABSTOL}")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "core tensor comparison failed")
    else()
      message("core tensor comparison succeeded!")
    endif()
  endif()
endif()

if(DEFINED FACTORS)
  if (${FACTORS} EQUAL 1)
    set(CMD "python3 ${PYTHON_COMPARE_SCRIPTS_DIR}/compare_factor_matrices.py --rtol ${FACTORMATRIX_COMPARISON_RELTOL} --atol ${FACTORMATRIX_COMPARISON_ABSTOL}")
    execute_process(COMMAND ${BASH} -c ${CMD} RESULT_VARIABLE RES)
    if(RES)
      message(FATAL_ERROR "factor matrices comparison failed")
    else()
      message("factor matrices comparison succeeded!")
    endif()
  endif()
endif()
